// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// `npx prisma format`
// `npx prisma validate`

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics", "fullTextSearch", "views"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  following String[] @db.ObjectId

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
  mininote     mininote[]
}

model RefreshToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model mininote {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId String @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id], onDelete: NoAction)

  likedIds  String[]   @db.ObjectId
  viewedIds String[]   @db.ObjectId
  replyToId String?    @db.ObjectId
  replyTo   mininote?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   mininote[] @relation("replies")
}
